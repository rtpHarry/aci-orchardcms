@functions {
  // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
  string CalcuClassify(string[] zoneNames, string classNamePrefix) {
    var zoneCounter = 0;
    var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
    return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
  }
}
@{
  /* Global includes for the theme
    ***************************************************************/

  SetMeta(httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1");
  Style.Include("http://fonts.googleapis.com/css?family=Lobster&subset=latin");

  Style.Include("icons/glyph/css/glyphicons.min.css");
  Style.Include("icons/halflings/css/halflings.min.css");
  Style.Include("icons/fontello/css/fontello.min.css");
  Style.Include("flexslider.min.css");
  Style.Include("nivo-slider.min.css");
  Style.Include("style.min.css");
  Style.Include("custom.min.css");

  /* scripts */
  Script.Require("jQuery").AtHead().UseCdn(true);
  Script.Include("bootstrap/js/bootstrap.min.js").AtFoot();
  Script.Include("jquery.contenthover.min.js").AtFoot();
  Script.Include("jquery.flexslider-min.js").AtFoot();
  Script.Include("jquery.nivo.slider.pack.js").AtFoot();
  Script.Include("jquery.easing.min.js").AtFoot();
  Script.Include("jquery.quicksand.min.js").AtFoot();
  Script.Include("ct.3LevelAccordion.min.js").AtFoot();
  Script.Include("jquery-ui-effects.js").AtFoot();
  Script.Include("ctDrillDown.min.js").AtFoot();
  Script.Include("jquery.tweet.min.js").AtFoot();
  Script.Include("main.min.js").AtFoot();

  /* Google code prettify (http://code.google.com/p/google-code-prettify) */
  Style.Include("prettify.min.css").AtHead();
  Script.Include("http://google-code-prettify.googlecode.com/svn/loader/run_prettify.js").AtFoot();

  /* Some useful shortcuts or settings
  ***************************************************************/

  Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

  /* Layout classification based on filled zones
  ***************************************************************/

  //Add classes to the wrapper div to toggle aside widget zones on and off
  var asideClass = CalcuClassify(new[] { "AsideFirst", "AsideSecond" }, "aside-"); // for aside-1, aside-2 or aside-12 if any of the aside zones are filled
  if (HasText(asideClass)) {
    Model.Classes.Add(asideClass);
  }

  //Add classes to the wrapper div to toggle tripel widget zones on and off
  var tripelClass = CalcuClassify(new[] { "TripelFirst", "TripelSecond", "TripelThird" }, "tripel-"); // for tripel-1, triple-2, etc. if any of the tripel zones are filled
  if (HasText(tripelClass)) {
    Model.Classes.Add(tripelClass);
  }

  //Add classes to the wrapper div to toggle quad widget zones on and off
  var footerQuadClass = CalcuClassify(new[] { "FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth" }, "split-"); // for quad-1, quad-2, etc. if any of the quad zones are filled
  if (HasText(footerQuadClass)) {
    Model.Classes.Add(footerQuadClass);
  }

  /* Inserting some ad hoc shapes
  ***************************************************************/

  WorkContext.Layout.Header.Add(New.Branding(), "5"); // Site name and link to the home page
  WorkContext.Layout.Footer.Add(New.BadgeOfHonor(), "5"); // Powered by Orchard
  WorkContext.Layout.Footer.Add(New.User(), "10"); // Login and dashboard links
  WorkContext.Layout.Footer.Add(New.DripScript(), "20"); // script used for www.drip.com account

  /* Last bit of code to prep the layout wrapper
  ***************************************************************/

  Model.Id = "layout-wrapper";
  var tag = Tag(Model, "div"); // using Tag so the layout div gets the classes, id and other attributes added to the Model
}
@{
  string containerClass = "span6";
  if (Model.AsideFirst == null && Model.AsideSecond == null) {
    containerClass = "span12";
  }
  if ((Model.AsideFirst != null && Model.AsideSecond == null) || (Model.AsideFirst == null && Model.AsideSecond != null)) {
    containerClass = "span9";
  }
}

@tag.StartElement
<div id="boxedWrapper">
  <div class="navbar navbar-static-top">
    <div class="navbar-inner">
      <div class="container">
        <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        @if (Model.Header != null) {
          <div class="brand">
            @Zone(Model.Header)
          </div>
        }
        @if (Model.Navigation != null) {
          <div class="nav-collapse">
            @Zone(Model.Navigation)
          </div>
        }
      </div>
    </div>
  </div>

  @if (Model.Slider != null) {
    <div class="flexslider flexFull">
      @Zone(Model.Slider)
    </div>
  }

  @Zone(Model.Content)

  <div id="footer">
    @if (Model.FooterQuadFirst != null || Model.FooterQuadSecond != null || Model.FooterQuadThird != null || Model.FooterQuadFourth != null) {
      <div class="container">
        <div class="row-fluid">
          @if (Model.FooterQuadFirst != null) {
            <div class="span3">
              @Zone(Model.FooterQuadFirst)
            </div>
          }
          @if (Model.FooterQuadSecond != null) {
            <div class="span3">
              @Zone(Model.FooterQuadSecond)
            </div>
          }
          @if (Model.FooterQuadThird != null) {
            <div class="span3">
              @Zone(Model.FooterQuadThird)
            </div>
          }
          @if (Model.FooterQuadFourth != null) {
            <div class="span3">
              @Zone(Model.FooterQuadFourth)
            </div>
          }
        </div>
      </div>
    }
    <div class="container">
      <div class="row-fluid">
        <div class="span3">
          <h4 class="brand">
            <img src="@Url.Content(Html.ThemePath(WorkContext.CurrentTheme, "/Content/images/kerrb-footer.png"))" />
          </h4>
          <p>Kerrb makes it easy to manage your cloud spend. We shut stuff down and we keep you informed.</p>
        </div>

        <div class="span9">
          <ul class="socialIcons pull-right">
            <li><a href="http://feeds.kerrb.com/kerrb" class="glyphicons rss" data-toggle="tooltip" title="Subscribe to our blog (http://feeds.kerrb.com/kerrb)"><i></i></a></li>
            <li><a href="http://www.twitter.com/KerrbApp" class="glyphicons twitter" data-toggle="tooltip" title="Follow us on Twitter (http://www.twitter.com/kerrbapp)"><i></i></a></li>
            <li><a href="http://www.facebook.com/kerrb" class="glyphicons facebook" data-toggle="tooltip" title="Like us on Facebook (http://www.facebook.com/kerrb)"><i></i></a></li>
            <li><a href="mailto:info@kerrb.com" class="glyphicons envelope" data-toggle="tooltip" title="Email us! (info@kerrb.com)"><i></i></a></li>
          </ul>
        </div>
      </div>
    </div>
    <div class="footNotes">
      <div class="container">
        <div class="row-fluid">
          <div class="span12">
            @if (Model.Footer != null) {
              <div class="pull-left">
                @Zone(Model.Footer)
              </div>
            }
            @if (Model.FooterSocialMedia != null) {
              <div class="pull-right">
                @Zone(Model.FooterSocialMedia)
              </div>
            }
          </div>
        </div>
      </div>
    </div>
  </div>
  <a href="#" id="toTop" class="halflings chevron-up"><i></i> Back to top</a>
</div>
@tag.EndElement