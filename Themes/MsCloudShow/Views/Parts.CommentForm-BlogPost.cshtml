@using Orchard.Comments;
@using Orchard.Comments.Models
@using Orchard.Comments.Settings
@using Orchard.Utility.Extensions;

@{
  CommentsPart commentsPart = Model.ContentPart;
  var settings = commentsPart.TypePartDefinition.Settings.GetModel<CommentsPartSettings>();
}
<div class="post-comment">
  @if (!Model.ContentPart.CommentsActive) {
    if (Model.ContentPart.Comments.Count > 0) {
      <div id="comments">
        <p class="comment-disabled">@T("Comments have been disabled for this content.")</p>
      </div>
    }
  } else if (settings.MustBeAuthenticated && WorkContext.CurrentUser == null) {
    <div id="comments">
      <p class="comment-disabled">@T("You must be authenticated in order to add a comment.")</p>
    </div>
  } else if (WorkContext.CurrentUser == null && !AuthorizedFor(Permissions.AddComment)) {
    <p class="lead">@T("Leave a Comment")</p>
    <p class="info message">
      @T("You must {0} to comment.", Html.ActionLink(T("log on").ToString(), "LogOn",
                            new { Controller = "Account", Area = "Orchard.Users", ReturnUrl = string.Format("{0}#addacomment", Context.Request.RawUrl) }))
  </p>
  } else {
    @Html.ValidationSummary()
    <span id="comment-form-beacon" />
    using (Html.BeginFormAntiForgeryPost(Url.Action("Create", "Comment", new { Area = "Orchard.Comments", ReturnUrl = Context.Request.ToUrlString() }), FormMethod.Post, new { @class = "comment-form" })) {
      if (TempData.ContainsKey("Comments.InvalidCommentEditorShape")) {
        @Display(TempData["Comments.InvalidCommentEditorShape"]);
      } else {
        @Display(Model.EditorShape)
      }
      <p>
        <button class="btn-main" type="submit">@T("Send Message")</button>
      </p>
    }

  }
</div>