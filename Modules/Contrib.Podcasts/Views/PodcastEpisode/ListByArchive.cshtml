@using Contrib.Podcasts.Extensions
@using Contrib.Podcasts.Models

@{
  var dateTimeLocalizatoin = WorkContext.Resolve<Orchard.Core.Shapes.Localization.IDateTimeLocalization>();
  var monthNames = dateTimeLocalizatoin.MonthNames.Text.Split(new[] {","}, StringSplitOptions.RemoveEmptyEntries).Select(x => x.Trim()).ToArray();
}

<h1 class="page-title">@Html.TitleForPage(T("Archives").Text, (string)Model.ArchiveData.Year.ToString(), (string)(Model.ArchiveData.Month > 0 ? monthNames[Model.ArchiveData.Month - 1] : null), (string)(Model.ArchiveData.Day > 0 ? Model.ArchiveData.Day.ToString() : null))</h1>
<div class="archive-trail">
@T("Archives") / 
@Html.Link((string)Model.ArchiveData.Year.ToString(), Url.PodcastArchiveYear((PodcastPart)Model.Podcast, (int)Model.ArchiveData.Year))
@(new MvcHtmlString(Model.ArchiveData.Month > 0 ? string.Format(" / {0}", Html.Link(monthNames[Model.ArchiveData.Month - 1], Url.PodcastArchiveMonth((PodcastPart)Model.Podcast, (int)Model.ArchiveData.Year, (int)Model.ArchiveData.Month))) : ""))
@(new MvcHtmlString(Model.ArchiveData.Day > 0 ? string.Format(" / {0}", Html.Link((string)Model.ArchiveData.Day.ToString(), Url.PodcastArchiveDay((PodcastPart)Model.Podcast, (int)Model.ArchiveData.Year, (int)Model.ArchiveData.Month, (int)Model.ArchiveData.Day))) : ""))
</div>
@Display(Model.ContentItems)